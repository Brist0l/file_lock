to cipher: (done)

1) read the file -> read.c 
2) apply some cipher to the file content -> cipher.c
3) delete the original file -> read.c
4) write down the ciphered stuff in a new file with the same name and extension -> read.c
5) write down properties like which cipher is there and how many times has it has been encrypted

to decipher:(done)

1) read the ciphered file -> read.c
2) decipher the stuff -> cipher.c
3) read the properies of the file and make a new file in the exact same way and write down the contents 

parsing:
1) argv needs to be piped to parser.py -> done

to implemnt later:

1) A dynamically increasing/decreasing memory space
2) Add a flag for wether the user wants the file deleted or not (done)
3) add an option of '-s' so that it can hide the file (done)
4) customise the cipher
5) add an option to change the extension of the file (default is the original extension) (done)
6) add an option to change the name (default is the original name) (done) 
7) add an option to change the perms of the file so a passwd would be required to access it
8) to decipher it add another layer of security which would ask for a passwd (implement after basic stuff 
has been done)
9) add an option for folders also which would recurse over all the files in the folder
